specVersion: 1.0.0
name: subql-multisig
version: 0.0.1
runner:
  node:
    name: "@subql/node"
    version: ">=1.0.0"
  query:
    name: "@subql/query"
    version: "*"
description: >-
  This project can be used as a starting point for developing your SubQuery
  project
repository: "https://github.com/subquery/subql-starter"
schema:
  file: ./schema.graphql
network:
  # Polkadot
  # # The genesis hash of the network (hash of block 0)
  # chainId: "0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"
  # # This endpoint must be a public non-pruned archive node
  # # Public nodes may be rate limited, which can affect indexing speed
  # # When developing your project we suggest getting a private API key
  # # You can get them from OnFinality for free https://app.onfinality.io
  # # https://documentation.onfinality.io/support/the-enhanced-api-service
  # endpoint: "wss://polkadot.api.onfinality.io/public-ws"
  # # Optionally provide the HTTP endpoint of a full chain dictionary to speed up processing
  # dictionary: "https://api.subquery.network/sq/subquery/polkadot-dictionary"

  # Kusama
  chainId: '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe'
  endpoint: wss://kusama.api.onfinality.io/public-ws
  dictionary: https://api.subquery.network/sq/subquery/kusama-dictionary

dataSources:
  - kind: substrate/Runtime
    # Polkadot
    # startBlock: 13234246

    # Kusama
    startBlock: 10340000

    mapping:
      file: ./dist/index.js
      handlers:
        # - handler: handleBlock
        #   kind: substrate/BlockHandler
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: multisig
            method: NewMultisig
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: multisig
            method: MultisigApproval
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: multisig
            method: MultisigExecuted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: multisig
            method: MultisigCancelled
        # - handler: handleCall
        #   kind: substrate/CallHandler
